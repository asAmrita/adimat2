% Generated by ADiMat 0.6.6-5530 (00419e1f)
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2018 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to johannes@johannes-willkomm.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=out
%  - independents=U
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: d_laplaceeqn
%

function [d_out out] = d_laplaceeqn(d_U, U)
   nx = size(U, 2);
   ny = size(U, 1);
   niter = 1000;
   dx = 1 / (nx - 1);
   dy = 1 / (ny - 1);
   x = 0:dx:1;
   y = 0:dy:1;
   M = @(x, y) sin(pi .* x).*sin(pi .* y) + sin(8 .* pi .* x).*sin(8 .* pi .* y);
   f = @(x, y) 2.*pi^2.*sin(pi .* x).*sin(pi .* y) + sign(-sin(8 .* pi .* x) .* sin(8 .* pi .* y));
   P = zeros(ny, nx);
   d_P = d_zeros(P);
   pn = zeros(ny, nx);
   d_pn = d_zeros(pn);
   tmpva1 = 0;
   P(:, 1) = tmpva1;
   d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{':' 1}}), d_zeros(tmpva1));
   tmpva1 = 0;
   P(:, nx) = tmpva1;
   d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{':' nx}}), d_zeros(tmpva1));
   tmpva1 = 0;
   P(1, :) = tmpva1;
   d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{1 ':'}}), d_zeros(tmpva1));
   tmpva1 = 0;
   P(ny, :) = tmpva1;
   d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{ny ':'}}), d_zeros(tmpva1));
   j = 2 : nx - 1;
   i = 2 : ny - 1;
   for it=1 : niter
      d_pn = d_P;
      pn = P;
      tmpda11 = x(i)';
      d_tmpca10 = adimat_opdiff_sum(adimat_opdiff_subsref(d_U, struct('type', '()', 'subs', {{i j}})), d_zeros(f(tmpda11, y(j))*dx^2*dy^2));
      tmpca10 = U(i, j) + f(tmpda11, y(j))*dx^2*dy^2;
      tmpda9 = j - 1;
      tmpda8 = j + 1;
      d_tmpca7 = adimat_opdiff_sum(adimat_opdiff_subsref(d_pn, struct('type', '()', 'subs', {{i tmpda8}})), adimat_opdiff_subsref(d_pn, struct('type', '()', 'subs', {{i tmpda9}})));
      tmpca7 = pn(i, tmpda8) + pn(i, tmpda9);
      d_tmpca6 = adimat_opdiff_mult_left(dx ^ 2, d_tmpca7, tmpca7);
      tmpca6 = dx^2 * tmpca7;
      tmpda5 = i - 1;
      tmpda4 = i + 1;
      d_tmpca3 = adimat_opdiff_sum(adimat_opdiff_subsref(d_pn, struct('type', '()', 'subs', {{tmpda4 j}})), adimat_opdiff_subsref(d_pn, struct('type', '()', 'subs', {{tmpda5 j}})));
      tmpca3 = pn(tmpda4, j) + pn(tmpda5, j);
      d_tmpca2 = adimat_opdiff_mult_left(dy ^ 2, d_tmpca3, tmpca3);
      tmpca2 = dy^2 * tmpca3;
      d_tmpca1 = adimat_opdiff_sum(d_tmpca2, d_tmpca6, -d_tmpca10);
      tmpca1 = tmpca2 + tmpca6 - tmpca10;
      d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{i j}}), adimat_opdiff_div_right(d_tmpca1, tmpca1, 2 * (dx^2 + dy^2)));
      P(i, j) = tmpca1 / (2 * (dx^2 + dy^2));
      tmpva1 = 0;
      P(:, 1) = tmpva1;
      d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{':' 1}}), d_zeros(tmpva1));
      tmpva1 = 0;
      P(:, nx) = tmpva1;
      d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{':' nx}}), d_zeros(tmpva1));
      tmpva1 = 0;
      P(1, :) = tmpva1;
      d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{1 ':'}}), d_zeros(tmpva1));
      tmpva1 = 0;
      P(ny, :) = tmpva1;
      d_P = adimat_opdiff_subsasgn(d_P, struct('type', {'()'}, 'subs', {{ny ':'}}), d_zeros(tmpva1));
   end
   pw = M(x', y);
   d_tmpca6 = adimat_opdiff_sum(d_P, d_zeros(-pw));
   tmpca6 = P - pw;
   d_tmpca5 = adimat_opdiff_epow_right(d_tmpca6, tmpca6, 2);
   tmpca5 = tmpca6 .^ 2;
   d_tmpca4 = adimat_opdiff_mult_left(0.5, d_tmpca5, tmpca5);
   tmpca4 = 0.5 * tmpca5;
   d_tmpca3 = adimat_opdiff_mult_right(d_tmpca4, tmpca4, dx);
   tmpca3 = tmpca4 * dx;
   d_tmpca2 = adimat_opdiff_mult_right(d_tmpca3, tmpca3, dy);
   tmpca2 = tmpca3 * dy;
   d_tmpca1 = adimat_diff_sum1(d_tmpca2, tmpca2);
   tmpca1 = sum(tmpca2);
   d_out = adimat_diff_sum1(d_tmpca1, tmpca1);
   out = sum(tmpca1);
end
